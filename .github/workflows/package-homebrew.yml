# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: package-homebrew

on:
  pull_request:
    paths:
      - .github/workflows/package-homebrew.yml
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: The github tag to use when publishing

permissions: read-all

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Is this a dry run?
        id: dry-run
        run: |
          echo dry-run=${{ github.event_name != 'release' && github.event_name != 'workflow_dispatch' }} >> "$GITHUB_OUTPUT"

      - name: Set up Homebrew
        if: steps.dry-run.outputs.dry-run != 'true'
        uses: Homebrew/actions/setup-homebrew@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Homebrew
        if: steps.dry-run.outputs.dry-run == 'true'
        uses: Homebrew/actions/setup-homebrew@master
        with:
          token: ${{ github.token }}

      - name: Set the API token
        if: steps.dry-run.outputs.dry-run != 'true'
        run: |
          echo GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} >> "$GITHUB_ENV"

      - name: Set up git
        uses: Homebrew/actions/git-user-config@master

      - name: Tap iopsystems/iop
        run: brew tap iopsystems/iop

      - name: Determine the release tag
        id: release-tag
        uses: actions/github-script@v7
        with:
          script: |
            if (context.eventName === "release") {
              return context.payload.release.tag_name;
            }

            if (context.eventName === "workflow_dispatch") {
              const tag = context.payload.inputs.tag;
              if (tag)
                return tag;
            }

            const release = await github.rest.repos.getLatestRelease({
              owner: context.payload.repository.owner.login,
              repo:  context.payload.repository.name
            });

            return release.data.tag_name;

      - name: Create the Homebrew update PR
        run: |
          BREW_ARGS=(
            --tag ${{ steps.release-tag.outputs.result }}
            --no-fork
            --no-browse
          )

          if ${{ steps.dry-run.outputs.dry-run }}; then
            BREW_ARGS+=(--dry-run)
          fi

          set -x
          brew bump-formula-pr iopsystems/iop/rezolus "${BREW_ARGS[@]}"
